{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "data-factory-for-ingestion"
		},
		"linked_service_for_blob_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linked_service_for_blob_storage'"
		},
		"linked_service_for_local_db_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linked_service_for_local_db'"
		},
		"linked_service_for_snowflake_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linked_service_for_snowflake'"
		},
		"linked_service_for_sql_database_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linked_service_for_sql_database'"
		},
		"linked_service_for_Q2_REST_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jsonplaceholder.typicode.com/users"
		},
		"linked_service_for_blob_mini_project_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'linked_service_for_blob_mini_project'"
		},
		"linked_service_for_local_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "JM-DKT-049"
		},
		"linked_service_for_local_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DE_mini_project"
		},
		"linked_service_for_local_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "AzureAD\\RamanathanL"
		},
		"linked_service_for_snowflake_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DE_mini_project_DB"
		},
		"linked_service_for_snowflake_properties_typeProperties_role": {
			"type": "string",
			"defaultValue": "ACCOUNTADMIN"
		},
		"linked_service_for_sql_database_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "server-for-adf.database.windows.net"
		},
		"linked_service_for_sql_database_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db-for-adf"
		},
		"linked_service_for_sql_database_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ramanathanlakshmanan"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADF-assessment-Q2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to sql using web_api",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource_Q2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "web_api_to_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_Q2')]",
				"[concat(variables('factoryId'), '/datasets/web_api_to_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF-assessment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Customer Excel",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CustomerData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Product CSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Customer Excel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "productData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "productTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ForEach_orders",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Order Files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Order CSV",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Day",
													"value": "$$FILENAME"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DayCSV",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "eachDayTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy Product CSV",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Order_Json_Folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Copy Country Code CSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach_orders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "countryCodeData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "countryCodeTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ForEach_stage_to_prep",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach_Cleaning_using_SP",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('tablesFromDB')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy From stage to prep",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "stage",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "prep",
											"type": "DatasetReference",
											"parameters": {
												"receiveTable": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy Country Code from stage to prep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach_stage_to_prep",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[moveCountryCodeToPrep]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Removing_null_values_in_stage_schema",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "removed_null_values_and_moved_to_prep",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ForEach_Cleaning_using_SP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Copy Country Code CSV",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('storedProceduresFromDB')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Stored procedure for cleaning",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@item()",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "linked_service_for_sql_database",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Join all tables",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Country Code from stage to prep",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[joinAll]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "JoinTableSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "joinTableDestination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"tablesFromDB": {
						"type": "Array",
						"defaultValue": [
							"productDetails",
							"orderDetails",
							"customerDetails"
						]
					},
					"storedProceduresFromDB": {
						"type": "Array",
						"defaultValue": [
							"ChangeCustomerDetailsDataType",
							"ChangeProductDetailsDataType",
							"ChangeOrderDetailsDataType",
							"CleanCountryCodeDetails"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-06T12:14:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerData')]",
				"[concat(variables('factoryId'), '/datasets/CustomerTable')]",
				"[concat(variables('factoryId'), '/datasets/productData')]",
				"[concat(variables('factoryId'), '/datasets/productTable')]",
				"[concat(variables('factoryId'), '/datasets/Order_Json_Folder')]",
				"[concat(variables('factoryId'), '/datasets/countryCodeData')]",
				"[concat(variables('factoryId'), '/datasets/countryCodeTable')]",
				"[concat(variables('factoryId'), '/datasets/Removing_null_values_in_stage_schema')]",
				"[concat(variables('factoryId'), '/datasets/removed_null_values_and_moved_to_prep')]",
				"[concat(variables('factoryId'), '/datasets/JoinTableSource')]",
				"[concat(variables('factoryId'), '/datasets/joinTableDestination')]",
				"[concat(variables('factoryId'), '/datasets/DayCSV')]",
				"[concat(variables('factoryId'), '/datasets/eachDayTable')]",
				"[concat(variables('factoryId'), '/datasets/stage')]",
				"[concat(variables('factoryId'), '/datasets/prep')]",
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DE_mini_project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FE_moving_to_snowflake",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('tablesFromPipeline')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data to snowflake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "linked_service_for_blob_mini_project",
												"type": "LinkedServiceReference"
											},
											"path": "blob-as-staging-area"
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerAllTables",
											"type": "DatasetReference",
											"parameters": {
												"tablesInDataset": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SnowflakeTable1",
											"type": "DatasetReference",
											"parameters": {
												"tablesInSnowflake": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"tablesFromPipeline": {
						"type": "Array",
						"defaultValue": [
							"CUSTOMERS$",
							"PRODUCTS$",
							"TRANSACTION$",
							"COUNTRYREGION"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerAllTables')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_blob_mini_project')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customer.xlsx",
						"container": "excel-files"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage_schema",
					"table": "customerDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DayCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "order-details"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinTableSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order_Json_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "order-details"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Removing_null_values_in_stage_schema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_Q2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_Q2_REST_API",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_Q2_REST_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_snowflake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablesInSnowflake": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "TEST_SCHEMA",
					"table": {
						"value": "@dataset().tablesInSnowflake",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerAllTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_local_db",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablesInDataset": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablesInDataset",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_local_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/countryCodeData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Country.csv",
						"container": "csv-files"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/countryCodeTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage_schema",
					"table": "countryCodeDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eachDayTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage_schema",
					"table": "orderDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/joinTableDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "prep_schema",
					"table": "joinedTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prep')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"receiveTable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "prep_schema",
					"table": {
						"value": "@dataset().receiveTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/productData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Product.csv",
						"container": "csv-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/productTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage_schema",
					"table": "productDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/removed_null_values_and_moved_to_prep')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "prep_schema",
					"table": "countryCodeDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage_schema",
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/web_api_to_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_service_for_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "webAPI_schema",
					"table": "Personal_Identity"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_service_for_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_service_for_Q2_REST_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('linked_service_for_Q2_REST_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_service_for_blob_mini_project')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('linked_service_for_blob_mini_project_sasUri')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeForSharedAccessToken",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeForSharedAccessToken')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_service_for_blob_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linked_service_for_blob_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_service_for_local_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('linked_service_for_local_db_properties_typeProperties_server')]",
					"database": "[parameters('linked_service_for_local_db_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('linked_service_for_local_db_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linked_service_for_local_db_password')]"
					}
				},
				"connectVia": {
					"referenceName": "selfHostedIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfHostedIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_service_for_snowflake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "thrkksz-hu73637",
					"user": "RAMANATHANLAKSHMANAN",
					"database": "[parameters('linked_service_for_snowflake_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"role": "[parameters('linked_service_for_snowflake_properties_typeProperties_role')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linked_service_for_snowflake_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_service_for_sql_database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('linked_service_for_sql_database_properties_typeProperties_server')]",
					"database": "[parameters('linked_service_for_sql_database_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('linked_service_for_sql_database_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linked_service_for_sql_database_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/6_PM_trigger_and_8_PM_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ADF-assessment",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-03-05T18:00:00",
						"endTime": "2025-03-09T12:35:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								18,
								20
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADF-assessment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeForSharedAccessToken')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfHostedIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}